[metadata]
name = bw-processing
version = attr: bw_processing.__version__
description = Tools to create structured arrays in a common format
author = Chris Mutel
maintainer = Chris Mutel
maintainer_email = <cmutel@gmail.com>
author_email = <cmutel@gmail.com>
license = BSD-3-Clause
license_files = LICENSE
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
keywords= "brightway", "development"
url = https://github.com/brightway-lca/bw_processing
# Add here related links, for example:
project_urls =
	source = https://github.com/brightway-lca/bw_processing
	homepage = https://github.com/brightway-lca/bw_processing
	tracker = https://github.com/brightway-lca/bw_processing/issues

#    Conda-Forge = https://anaconda.org/conda-forge/bw_processing
#    Download = https://pypi.org/project/bw_processing/#files

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =.

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8

install_requires =
    fs
    numpy
    pandas
    pyarrow

[options.packages.find]
where = .
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install samplepyscaffoldproject[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

dev =
    pre-commit
    pylint

docs =
    sphinx
    myst_parser
    furo

[tool:pytest]
addopts =
    --cov bw_processing --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[devpi:upload]
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
